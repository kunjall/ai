import numpy as np
import skfuzzy as fuzz
from skfuzzy import control as ctrl
distance = ctrl.Antecedent(np.arange(0, 101, 1), 'distance')
relative_speed = ctrl.Antecedent(np.arange(-10, 11, 1), 'relative_speed')
speed = ctrl.Consequent(np.arange(0, 101, 1), 'speed')

distance['close'] = fuzz.trimf(distance.universe, [0, 0, 50])
distance['far'] = fuzz.trimf(distance.universe, [0, 50, 100])

relative_speed['slow'] = fuzz.trimf(relative_speed.universe, [-10, -10, 0])
relative_speed['fast'] = fuzz.trimf(relative_speed.universe, [0, 10, 10])

speed['slow'] = fuzz.trimf(speed.universe, [0, 0, 50])
speed['fast'] = fuzz.trimf(speed.universe, [0, 50, 100])
rule1 = ctrl.Rule(distance['close'] | relative_speed['slow'], speed['slow'])
rule2 = ctrl.Rule(distance['far'] & relative_speed['fast'], speed['fast'])

speed_ctrl = ctrl.ControlSystem([rule1, rule2])
car_speed = ctrl.ControlSystemSimulation(speed_ctrl)
car_speed.input['distance'] = 30
car_speed.input['relative_speed'] = -5

car_speed.compute()
car_speed.output['speed']
